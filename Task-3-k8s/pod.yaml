kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: efs-sc
provisioner: efs.csi.aws.com
parameters:
  provisioningMode: efs-ap
  fileSystemId: <Your filesystem id from EFS, normally starting with fs->
  directoryPerms: "777"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: efs-pv
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: <Your filesystem id from EFS, normally starting with fs->

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: myvolume
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      initContainers:
        - name: init-check-seed-data
          image: alpine
          volumeMounts:
            - name: myvolume
              mountPath: /uploads
          workingDir: /uploads
          command: [/bin/sh, -c]
          args:
            - |
              SEED_FILENAME="seed.txt"
              if [[ ! -f "$SEED_FILENAME" ]]; then
                wget https://www.primarybid.com/seed.txt -O $SEED_FILE_NAME
                echo "Seed file Downloaded."
              else
                echo "Seed file exist. Nothing to do"

      containers:
        - name: nginx
          image: nginx:latest
          volumeMounts:
            - name: myvolume
              mountPath: /var/efs/uploads
              subPath: uploads

      volumes:
        - name: myvolume
          persistentVolumeClaim:
            claimName: myvolume
